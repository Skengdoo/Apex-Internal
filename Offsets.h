#include <cstdint>

namespace Offsets
{
	inline uintptr_t client_render_targets = 0x1efa430;
	inline uintptr_t ibase_client_dll = 0x195b460;
	inline uintptr_t iclient_entity_list = 0x1ef9c38;
	inline uintptr_t cprediction = 0x1ef9c40;
	inline uintptr_t iv_model_render = 0x1239660;
	inline uintptr_t vgui_system = 0x1eb3f80;
	inline uintptr_t iv_render_view = 0x7431230;
	inline uintptr_t iv_debug_overlay = 0x74cc438;
	inline uintptr_t iv_model_info_client = 0x7431240;
	inline uintptr_t iv_engine_client = 0x0;
	inline uintptr_t iv_engine_trace = 0x7431248;
	inline uintptr_t inetwork_string_table = 0x7431258;
	inline uintptr_t cnetwork_u64_table = 0x742ea18;
	inline uintptr_t cinput = 0x1d0d600;
	inline uintptr_t cengine = 0x1240780;
	inline uintptr_t iswapchain = 0xb84c068;
	inline uintptr_t cl_entitylist = 0x1974ad8;
	inline uintptr_t local_entity_handle = 0x123308c;
	inline uintptr_t local_player = 0x1d243d8;
	inline uintptr_t global_vars = 0x1309840;
	inline uintptr_t name_list = 0xb9315d0;
	inline uintptr_t view_render = 0x7431238;
	inline uintptr_t view_matrix = 0x10e8d0;
	inline uintptr_t client_state = 0x1309b30;
	inline uintptr_t sign_on_state = 0x1309bc8;
	inline uintptr_t level_name = 0x1309ce0;
	inline uintptr_t glow_enable = 0xe56;
	inline uintptr_t glow_type = 0x2c0;
	inline uintptr_t glow_fade = 0x388;
	inline uintptr_t glow_distance = 0x3B4;
	inline uintptr_t glow_lifetime = 0x3A4;
	inline uintptr_t glow_visible_type = 0x3d0;
	inline uintptr_t glow_color = 0x1d0; // r = 0x1d0, g = 0x1d4, b = 0x1d8
	inline uintptr_t thirdperson_override = 0x019596b0 + 0x6C;
	inline uintptr_t m_thirdPersonShoulderView = 0x3680; // Int
	inline uintptr_t cl_phys_timescale = 0x01d19480 + 0x6C; // Default 1.0
	inline uintptr_t mat_disable_bloom = 0x01d19b60 + 0x6C; // Default 0
	inline uintptr_t cl_mouseenable = 0x01d10cc0; // Default 1
	inline uintptr_t host_timescale = 0x0138a640; // Default 1.0
	inline uintptr_t ss_viewmodelfov = 0x01cfe440;

	namespace Classes
	{
		namespace Buttons
		{
			constexpr auto in_attack = 0x07430358;
			constexpr auto in_backward = 0x074302f0;
			constexpr auto in_break = 0x0b931008;
			constexpr auto in_camin = 0x0bd2f340;
			constexpr auto in_camout = 0x0b9312e0;
			constexpr auto in_campitchdown = 0x0b931290;
			constexpr auto in_campitchup = 0x0bd2f3d8;
			constexpr auto in_camyawleft = 0x0b931320;
			constexpr auto in_camyawright = 0x0b9312c0;
			constexpr auto in_commandermousemove = 0x07430310;
			constexpr auto in_dodge = 0x07430260;
			constexpr auto in_duck = 0x0b931028;
			constexpr auto in_forward = 0x074302c8;
			constexpr auto in_graph = 0x07430368;
			constexpr auto in_jump = 0x074303d0;
			constexpr auto in_klook = 0x0bd2f3b8;
			constexpr auto in_left = 0x0b931308;
			constexpr auto in_lookdown = 0x0b9312b0;
			constexpr auto in_lookup = 0x0b931018;
			constexpr auto in_melee = 0x0bd2f3c8;
			constexpr auto in_movedown = 0x0b931330;
			constexpr auto in_moveleft = 0x074302b8;
			constexpr auto in_moveright = 0x074302e0;
			constexpr auto in_moveup = 0x0bd2f398;
			constexpr auto in_offhand0 = 0x0bd2f3a8;
			constexpr auto in_offhand1 = 0x0b9312f8;
			constexpr auto in_offhand2 = 0x0b9310c0;
			constexpr auto in_offhand3 = 0x0b9310a0;
			constexpr auto in_offhand4 = 0x0b931058;
			constexpr auto in_pause_menu = 0x074303c0;
			constexpr auto in_ping = 0x07430328;
			constexpr auto in_reload = 0x07430378;
			constexpr auto in_right = 0x0b9312d0;
			constexpr auto in_score = 0x0b9310d0;
			constexpr auto in_scriptCommand3 = 0x0bd2f360;
			constexpr auto in_showscores = 0x0b9310d0;
			constexpr auto in_speed = 0x07430300;
			constexpr auto in_strafe = 0x07430390;
			constexpr auto in_toggle_duck = 0x0bd2f370;
			constexpr auto in_toggle_zoom = 0x0bd2f350;
			constexpr auto in_use = 0x0b9310b0;
			constexpr auto in_useAndReload = 0x0b931048;
			constexpr auto in_use_alt = 0x0bd2f380;
			constexpr auto in_use_long = 0x0b931038;
			constexpr auto in_variableScopeToggle = 0x074303a8;
			constexpr auto in_walk = 0x0b931078;
			constexpr auto in_weaponCycle = 0x0b9312a0;
			constexpr auto in_weapon_discard = 0x0b931068;
			constexpr auto in_zoom = 0x0b931090;
		}
		// Inheritance: 
		namespace CBaseEntity
		{
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_fEffects = 0x44; // Integer
			constexpr auto m_usableType = 0x48; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_clrRender = 0x50; // Integer
			constexpr auto m_clIntensity = 0x54; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_bossPlayer = 0x124; // Integer
			constexpr auto m_shieldHealth = 0x170; // Integer
			constexpr auto m_shieldHealthMax = 0x174; // Integer
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_iTeamNum = 0x448; // Integer
			constexpr auto m_teamMemberIndex = 0x450; // Integer
			constexpr auto m_squadID = 0x454; // Integer
			constexpr auto m_grade = 0x458; // Integer
			constexpr auto m_ignorePredictedTriggerFlags = 0x45c; // Integer
			constexpr auto m_passThroughFlags = 0x464; // Integer
			constexpr auto m_passThroughThickness = 0x468; // Integer
			constexpr auto m_passThroughDirection = 0x46c; // Float
			constexpr auto m_bIsSoundCodeControllerValueSet = 0x47c; // Integer
			constexpr auto m_flSoundCodeControllerValue = 0x480; // Float
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_bRenderWithViewModels = 0x4a8; // Integer
			constexpr auto m_nRenderFX = 0x4a9; // Integer
			constexpr auto m_nRenderMode = 0x4b9; // Integer
			constexpr auto m_vecMins = 0x4d0; // Vector
			constexpr auto m_vecMaxs = 0x4dc; // Vector
			constexpr auto m_usSolidFlags = 0x4e8; // Integer
			constexpr auto m_nSolidType = 0x4ec; // Integer
			constexpr auto m_triggerBloat = 0x4ed; // Integer
			constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
			constexpr auto m_nSurroundType = 0x4fc; // Integer
			constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
			constexpr auto m_CollisionGroup = 0x540; // Integer
			constexpr auto m_contents = 0x544; // Integer
			constexpr auto m_collideWithOwner = 0x548; // Integer
			constexpr auto m_iSignifierName = 0x580; // String
			constexpr auto m_iName = 0x589; // String
			constexpr auto m_scriptNameIndex = 0x690; // Integer
			constexpr auto m_instanceNameIndex = 0x694; // Integer
			constexpr auto m_holdUsePrompt = 0x718; // String
			constexpr auto m_pressUsePrompt = 0x720; // String
			constexpr auto m_phaseShiftFlags = 0x7b8; // Integer
			constexpr auto m_baseTakeDamage = 0x7bc; // Integer
			constexpr auto m_invulnerableToDamageCount = 0x7c0; // Integer
			constexpr auto m_attachmentLerpStartOrigin = 0x83c; // Vector
			constexpr auto m_attachmentLerpStartAngles = 0x848; // Vector
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_fadeDist = 0x86c; // Float
			constexpr auto m_dissolveEffectEntityHandle = 0x918; // Integer
			constexpr auto m_usablePriority = 0x928; // Integer
			constexpr auto m_usableDistanceOverride = 0x92c; // Float
			constexpr auto m_usableFOV = 0x930; // Float
			constexpr auto m_usePromptSize = 0x934; // Float
			constexpr auto m_firstChildEntityLink = 0xa40; // Integer
			constexpr auto m_firstParentEntityLink = 0xa44; // Integer
			constexpr auto m_realmsBitMask = 0xa48; // Integer64

			constexpr auto m_ModelName = 0x30;
		}
		// Inheritance: 
		namespace CPlayer
		{
			constexpr auto m_passives = 0x0; // Array
			constexpr auto m_vecAbsOrigin = 0x014c; // Vector
			constexpr auto m_fFlags = 0x98; // Integer
			constexpr auto m_hGroundEntity = 0x434; // Integer
			constexpr auto m_iHealth = 0x438; // Integer
			constexpr auto m_flMaxspeed = 0x43c; // Float
			constexpr auto m_iMaxHealth = 0x578; // Integer
			constexpr auto m_lifeState = 0x798; // Integer
			constexpr auto m_decalIndex = 0xeb8; // Integer
			constexpr auto m_titanSoul = 0x1b28; // Integer
			constexpr auto m_bZooming = 0x1c31; // Integer
			constexpr auto m_zoomBaseFrac = 0x1c38; // Float
			constexpr auto m_flHullHeight = 0x20ec; // Float
			constexpr auto m_angEyeAnglesx = 0x20f0; // Float
			constexpr auto m_angEyeAnglesy = 0x20f4; // Float
			constexpr auto m_traversalAnimProgress = 0x20fc; // Float
			constexpr auto m_sprintTiltFrac = 0x2100; // Float
			constexpr auto m_ammoPoolCapacity = 0x257c; // Integer
			constexpr auto m_hasBadReputation = 0x2580; // Integer
			constexpr auto m_hardware = 0x2588; // Integer
			constexpr auto m_unspoofedHardware = 0x2589; // Integer
			constexpr auto m_platformUserId = 0x2590; // Integer64
			constexpr auto m_unSpoofedPlatformUserId = 0x2598; // Integer64
			constexpr auto m_EadpUserId = 0x25a0; // Integer64
			constexpr auto m_crossPlayChat = 0x25a8; // Integer
			constexpr auto m_crossPlayChatFriends = 0x25a9; // Integer
			constexpr auto m_classModsActive = 0x25b0; // Integer64
			constexpr auto m_passives0 = 0x26e8; // Integer64
			constexpr auto m_bleedoutState = 0x2708; // Integer
			constexpr auto m_bleedoutStartTime = 0x270c; // Float
			constexpr auto m_damageComboStartHealth = 0x28b8; // Integer
			constexpr auto m_gestureAutoKillBitfield = 0x297c; // Integer
			constexpr auto m_autoSprintForced = 0x29c0; // Integer
			constexpr auto m_fIsSprinting = 0x29c4; // Integer
			constexpr auto m_playerSettingForStickySprintForward = 0x29d2; // Integer
			constexpr auto m_playerVehicleCount = 0x2a08; // Integer
			constexpr auto m_playerVehicleDriven = 0x2a0c; // Integer
			constexpr auto m_duckState = 0x2a14; // Integer
			constexpr auto m_leanState = 0x2a18; // Integer
			constexpr auto m_canStand = 0x2a1d; // Integer
			constexpr auto m_StandHullMin = 0x2a20; // Vector
			constexpr auto m_StandHullMax = 0x2a2c; // Vector
			constexpr auto m_DuckHullMin = 0x2a38; // Vector
			constexpr auto m_DuckHullMax = 0x2a44; // Vector
			constexpr auto m_entitySyncingWithMe = 0x2a50; // Integer
			constexpr auto m_upDir = 0x2a54; // Vector
			constexpr auto m_traversalState = 0x2ad0; // Integer
			constexpr auto m_traversalType = 0x2ad4; // Integer
			constexpr auto m_traversalForwardDir = 0x2b00; // Vector
			constexpr auto m_traversalRefPos = 0x2b0c; // Vector
			constexpr auto m_traversalYawDelta = 0x2b38; // Float
			constexpr auto m_traversalYawPoseParameter = 0x2b3c; // Integer
			constexpr auto m_wallClimbSetUp = 0x2b54; // Integer
			constexpr auto m_wallHanging = 0x2b55; // Integer
			constexpr auto m_grapplePoints = 0x2c48; // Array
			constexpr auto m_grappleVel = 0x2c50; // Vector
			constexpr auto m_grapplePoints0 = 0x2c5c; // Vector
			constexpr auto m_grapplePointCount = 0x2c8c; // Integer
			constexpr auto m_grappleAttached = 0x2c90; // Integer
			constexpr auto m_grapplePulling = 0x2c91; // Integer
			constexpr auto m_grappleSwinging = 0x2c92; // Integer
			constexpr auto m_grappleRetracting = 0x2c93; // Integer
			constexpr auto m_grappleForcedRetracting = 0x2c94; // Integer
			constexpr auto m_grappleGracePeriodFinished = 0x2c95; // Integer
			constexpr auto m_grappleUsedPower = 0x2c98; // Float
			constexpr auto m_grappleMeleeTarget = 0x2cac; // Integer
			constexpr auto m_grappleAutoAimTarget = 0x2cb0; // Integer
			constexpr auto m_grappleHasGoodVelocity = 0x2cb4; // Integer
			constexpr auto m_grappleSwingDetachLowSpeed = 0x2cbc; // Float
			constexpr auto m_grappleActive = 0x2cd8; // Integer
			constexpr auto m_turret = 0x2d20; // Integer
			constexpr auto m_activeZipline = 0x2e78; // Integer
			constexpr auto m_ziplineValid3pWeaponLayerAnim = 0x2e84; // Integer
			constexpr auto m_ziplineState = 0x2e88; // Integer
			constexpr auto m_ziplineGrenadeBeginStationEntity = 0x2f1c; // Integer
			constexpr auto m_ziplineGrenadeBeginStationAttachmentIndex = 0x2f20; // Integer
			constexpr auto m_isPerformingBoostAction = 0x2f61; // Integer
			constexpr auto m_lastJumpPadTouched = 0x3058; // Integer
			constexpr auto m_launchCount = 0x3060; // Integer
			constexpr auto m_useCredit = 0x31c8; // Integer
			constexpr auto m_playerFlags = 0x31d8; // Integer
			constexpr auto m_hasMic = 0x31e0; // Integer
			constexpr auto m_inPartyChat = 0x31e1; // Integer
			constexpr auto m_playerMoveSpeedScale = 0x31e4; // Float
			constexpr auto m_bShouldDrawPlayerWhileUsingViewEntity = 0x3420; // Integer
			constexpr auto m_iSpawnParity = 0x348c; // Integer
			constexpr auto m_grappleHook = 0x3630; // Integer
			constexpr auto m_petTitan = 0x3634; // Integer
			constexpr auto m_xp = 0x365c; // Integer
			constexpr auto m_skill_mu = 0x3664; // Float
			constexpr auto m_bHasMatchAdminRole = 0x3668; // Integer
			constexpr auto m_ubEFNoInterpParity = 0x3f50; // Integer
			constexpr auto m_hColorCorrectionCtrl = 0x3f54; // Integer
			constexpr auto m_title = 0x3f78; // String
			constexpr auto m_nPlayerCond = 0x42b0; // Integer
			constexpr auto m_pilotClassIndex = 0x42fc; // Integer
			constexpr auto m_pilotClassActivityModifier = 0x4300; // Integer
			constexpr auto m_playerScriptNetDataGlobal = 0x4588; // Integer
			constexpr auto m_helmetType = 0x4590; // Integer
			constexpr auto m_armorType = 0x4594; // Integer
			constexpr auto m_controllerModeActive = 0x459c; // Integer
			constexpr auto m_skydiveForwardPoseValueTarget = 0x45b8; // Float
			constexpr auto m_skydiveSidePoseValueTarget = 0x45c4; // Float
			constexpr auto m_skydiveState = 0x45ec; // Integer
			constexpr auto m_skydiveDiveAngle = 0x4604; // Float
			constexpr auto m_skydiveIsDiving = 0x4608; // Integer
			constexpr auto m_skydiveSpeed = 0x460c; // Float
			constexpr auto m_skydiveStrafeAngle = 0x4610; // Float
			constexpr auto m_skydivePlayerPitch = 0x4624; // Float
			constexpr auto m_skydivePlayerYaw = 0x4628; // Float
			constexpr auto m_skydiveFromSkywardLaunch = 0x4665; // Integer
			constexpr auto m_skywardLaunchState = 0x4668; // Integer
			constexpr auto m_skywardLaunchSlowStartTime = 0x467c; // Float
			constexpr auto m_skywardLaunchSlowEndTime = 0x4680; // Float
			constexpr auto m_skywardLaunchFastEndTime = 0x4684; // Float
			constexpr auto m_skywardLaunchEndTime = 0x468c; // Float
			constexpr auto m_skywardLaunchSlowSpeed = 0x4694; // Float
			constexpr auto m_skywardLaunchFastSpeed = 0x4698; // Float
			constexpr auto m_skywardOffset = 0x469c; // Vector
			constexpr auto m_skywardLaunchInterrupted = 0x46ac; // Integer
			constexpr auto m_skywardLaunchFollowing = 0x46ad; // Integer
			constexpr auto m_armoredLeapState = 0x46b0; // Integer
			constexpr auto m_dragReviveState = 0x46b4; // Integer
			constexpr auto m_dragReviveOutroStartTime = 0x46b8; // Float

			constexpr auto m_latestPrimaryWeapons = 0x1a8c; //DataTable
			constexpr auto m_lastVisibleTime = 0x1af4; //DataTable
			constexpr auto m_view_angles = m_ammoPoolCapacity - 0x14; //vector
			constexpr auto m_breath_angles = m_view_angles - 0x10; //vector
			constexpr auto m_vecPunchWeapon_Angle = 0x2480;
			constexpr auto m_hObserverTarget = 0x34a0;
		}
		// Inheritance: 
		namespace CWeaponX
		{
			constexpr auto m_bulletSpeed = 0x1f18;
			constexpr auto m_bulletScale = 0x1f20;
			constexpr auto m_bulletGravity = (m_bulletSpeed + 0x8);
			constexpr auto m_bInReload = 0x16da;


			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_bClientSideAnimation = 0x1044; // Integer
			constexpr auto m_weaponOwner = 0x1690; // Integer
			constexpr auto m_worldModelIndexOverride = 0x16a4; // Integer
			constexpr auto m_iWorldModelIndex = 0x16a8; // Integer
			constexpr auto m_holsterModelIndex = 0x16ac; // Integer
			constexpr auto m_droppedModelIndex = 0x16b0; // Integer
			constexpr auto m_nIdealSequence = 0x16b4; // Integer
			constexpr auto m_IdealActivity = 0x16b8; // Integer
			constexpr auto m_weaponActivity = 0x16bc; // Integer
			constexpr auto m_ActiveState = 0x16c0; // Integer
			constexpr auto m_weapState = 0x16d4; // Integer
			constexpr auto m_allowedToUse = 0x16d8; // Integer
			constexpr auto m_discarded = 0x16d9; // Integer
			constexpr auto m_forcedADS = 0x16dc; // Integer
			constexpr auto m_tossRelease = 0x16e0; // Integer
			constexpr auto m_offhandSwitchSlot = 0x16e4; // Integer
			constexpr auto m_energizeState = 0x16e8; // Integer
			constexpr auto m_customActivity = 0x16f4; // Integer
			constexpr auto m_customActivitySequence = 0x16f8; // Integer
			constexpr auto m_customActivityOwner = 0x16fc; // Integer
			constexpr auto m_customActivityFlags = 0x1704; // Integer
			constexpr auto m_moveSpread = 0x1710; // Float
			constexpr auto m_spreadStartFracHip = 0x1718; // Float
			constexpr auto m_spreadStartFracADS = 0x171c; // Float
			constexpr auto m_kickSpreadHipfire = 0x1720; // Float
			constexpr auto m_kickSpreadADS = 0x1724; // Float
			constexpr auto m_kickScaleBasePitch = 0x172c; // Float
			constexpr auto m_kickScaleBaseYaw = 0x1730; // Float
			constexpr auto m_kickPatternScaleBase = 0x1734; // Float
			constexpr auto m_kickSpringHeatBaseValue = 0x173c; // Float
			constexpr auto m_semiAutoTriggerDown = 0x1744; // Integer
			constexpr auto m_pendingTriggerPull = 0x1745; // Integer
			constexpr auto m_semiAutoNeedsRechamber = 0x1746; // Integer
			constexpr auto m_pendingReloadAttempt = 0x1747; // Integer
			constexpr auto m_offhandHybridNormalMode = 0x1748; // Integer
			constexpr auto m_pendingoffhandHybridToss = 0x1749; // Integer
			constexpr auto m_fastHolster = 0x174a; // Integer
			constexpr auto m_didFirstDeploy = 0x174b; // Integer
			constexpr auto m_shouldCatch = 0x174c; // Integer
			constexpr auto m_clipModelIsHidden = 0x174d; // Integer
			constexpr auto m_segmentedReloadEndSeqRequired = 0x174e; // Integer
			constexpr auto m_reloadStartedEmpty = 0x174f; // Integer
			constexpr auto m_segmentedAnimStartedOneHanded = 0x1750; // Integer
			constexpr auto m_segmentedReloadCanRestartLoop = 0x1751; // Integer
			constexpr auto m_segmentedReloadLoopFireLocked = 0x1752; // Integer
			constexpr auto m_realtimeModCmdHead = 0x175b; // Integer
			constexpr auto m_realtimeModCmdCount = 0x175c; // Integer
			constexpr auto m_realtimeModCanADS = 0x175d; // Integer
			constexpr auto m_customActivityAttachedModelIndex = 0x1760; // Integer
			constexpr auto m_customActivityAttachedModelAttachmentIndex = 0x1764; // Integer
			constexpr auto m_fireRateLerp_startFraction = 0x176c; // Float
			constexpr auto m_fireRateLerp_stopFraction = 0x1774; // Float
			constexpr auto m_chargeAnimIndex = 0x1778; // Integer
			constexpr auto m_chargeAnimIndexOld = 0x177c; // Integer
			constexpr auto m_proScreen_owner = 0x1780; // Integer
			constexpr auto m_proScreen_int0 = 0x1784; // Integer
			constexpr auto m_proScreen_int1 = 0x1788; // Integer
			constexpr auto m_proScreen_int2 = 0x178c; // Integer
			constexpr auto m_proScreen_float0 = 0x1790; // Float
			constexpr auto m_proScreen_float1 = 0x1794; // Float
			constexpr auto m_proScreen_float2 = 0x1798; // Float
			constexpr auto m_reloadMilestone = 0x179c; // Integer
			constexpr auto m_rechamberMilestone = 0x17a0; // Integer
			constexpr auto m_cooldownMilestone = 0x17a4; // Integer
			constexpr auto m_prevSeqWeight = 0x17a8; // Integer
			constexpr auto m_scriptFlags0 = 0x17b8; // Integer
			constexpr auto m_scriptInt0 = 0x17bc; // Integer
			constexpr auto m_scriptInt1 = 0x17be; // Integer
			constexpr auto m_curZoomFOV = 0x17c0; // Float
			constexpr auto m_targetZoomFOV = 0x17c4; // Float
			constexpr auto m_zoomFOVLerpTime = 0x17c8; // Float
			constexpr auto m_currentAltFireAnimIndex = 0x17d8; // Integer
			constexpr auto m_legendaryModelIndex = 0x17dc; // Integer
			constexpr auto m_charmModelIndex = 0x17e0; // Integer
			constexpr auto m_charmAttachment = 0x17e4; // Integer
			constexpr auto m_charmScriptIndex = 0x17e8; // Integer
			constexpr auto m_lastTossedGrenade = 0x17f0; // Integer
			constexpr auto m_targetingLaserEnabledScript = 0x17f4; // Integer
			constexpr auto m_needsReloadCheck = 0x17f5; // Integer
			constexpr auto m_needsEmptyCycleCheck = 0x17f6; // Integer
			constexpr auto m_skinOverride = 0x17f8; // Integer
			constexpr auto m_skinOverrideIsValid = 0x17fc; // Integer
			constexpr auto m_lastChargeFrac = 0x1808; // Float
			constexpr auto m_sustainedLaserCurrentSpread = 0x1834; // Float
			constexpr auto m_sustainedDischargeIsInPrimaryAttack = 0x1838; // Integer
			constexpr auto m_sustainedLaserNextRandomSeed = 0x1839; // Integer
			constexpr auto m_modBitfieldFromPlayer = 0x183c; // Integer
			constexpr auto m_modBitfieldInternal = 0x1840; // Integer
			constexpr auto m_modBitfieldCurrent = 0x1844; // Integer
			constexpr auto m_curSharedEnergyCost = 0x1848; // Integer
			constexpr auto m_grappleWeaponNeedsDryfire = 0x184c; // Integer
			constexpr auto m_scriptFloat0 = 0x1850; // Float
			constexpr auto m_shouldPlayIdleAnims = 0x1854; // Integer
			constexpr auto m_scriptActivated = 0x1855; // Integer
			constexpr auto m_curKillCount = 0x1856; // Integer
			constexpr auto m_curKnockdownCount = 0x1857; // Integer
			constexpr auto m_isLoadoutPickup = 0x1858; // Integer
			constexpr auto m_utilityEnt = 0x185c; // Integer
			constexpr auto m_weaponNameIndex = 0x1864; // Integer
			constexpr auto m_oaActiveOverride = 0x1870; // Integer
			constexpr auto m_parentTurret = 0x1874; // Integer
		}
		// Inheritance: 
		namespace CRopeKeyframe
		{
			constexpr auto m_localOrigin = 0x4; // Vector
			constexpr auto m_parentAttachmentType = 0x20; // Integer
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_clrRender = 0x50; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_nRenderMode = 0x4b9; // Integer
			constexpr auto m_parentAttachmentHitbox = 0x85c; // Integer
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_fadeDist = 0x86c; // Float
			constexpr auto m_ropeZiplineAutoDetachDistance = 0xa60; // Float
			constexpr auto m_ziplineSagEnable = 0xa64; // Integer
			constexpr auto m_ziplineSagHeight = 0xa68; // Float
			constexpr auto m_ziplineMoveSpeedScale = 0xb60; // Float
			constexpr auto m_wiggleMaxLen = 0xb6c; // Float
			constexpr auto m_wiggleMagnitude = 0xb70; // Float
			constexpr auto m_wiggleSpeed = 0xb74; // Float
			constexpr auto m_flScrollSpeed = 0xbac; // Float
			constexpr auto m_RopeFlags = 0xbb0; // Integer
			constexpr auto m_iRopeMaterialModelIndex = 0xbb4; // Integer
			constexpr auto m_nSegments = 0xe38; // Integer
			constexpr auto m_hStartPoint = 0xe3c; // Integer
			constexpr auto m_hEndPoint = 0xe40; // Integer
			constexpr auto m_hPrevPoint = 0xe44; // Integer
			constexpr auto m_iStartAttachment = 0xe48; // Integer
			constexpr auto m_iEndAttachment = 0xe4a; // Integer
			constexpr auto m_subdivStackCount = 0xe74; // Integer
			constexpr auto m_subdivSliceCount = 0xe78; // Integer
			constexpr auto m_ropeLength = 0xe7c; // Integer
			constexpr auto m_constraintIterations = 0xe84; // Integer
			constexpr auto m_ropeDampening = 0xe88; // Float
			constexpr auto m_Slack = 0xe8c; // Integer
			constexpr auto m_TextureScale = 0xe90; // Float
			constexpr auto m_TextureScale_ = 0xe90; // Float
			constexpr auto m_fLockedPoints = 0xe94; // Integer
			constexpr auto m_lockDirectionCutoffLength = 0xe98; // Integer
			constexpr auto m_lockDirectionStrength = 0xe9c; // Float
			constexpr auto m_nChangeCount = 0xea0; // Integer
			constexpr auto m_Width = 0xea4; // Float
			constexpr auto m_bConstrainBetweenEndpoints = 0xf38; // Integer
		}
		// Inheritance: 
		namespace CPropSurvival
		{
			constexpr auto m_parentAttachmentType = 0x20; // Integer
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_fEffects = 0x44; // Integer
			constexpr auto m_usableType = 0x48; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_vecMins = 0x4d0; // Vector
			constexpr auto m_vecMaxs = 0x4dc; // Vector
			constexpr auto m_usSolidFlags = 0x4e8; // Integer
			constexpr auto m_nSolidType = 0x4ec; // Integer
			constexpr auto m_triggerBloat = 0x4ed; // Integer
			constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
			constexpr auto m_nSurroundType = 0x4fc; // Integer
			constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
			constexpr auto m_CollisionGroup = 0x540; // Integer
			constexpr auto m_iSignifierName = 0x580; // String
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_usablePriority = 0x928; // Integer
			constexpr auto m_usableDistanceOverride = 0x92c; // Float
			constexpr auto m_usableFOV = 0x930; // Float
			constexpr auto m_usePromptSize = 0x934; // Float
			constexpr auto m_realmsBitMask = 0xa48; // Integer64
			constexpr auto m_nSkin = 0xea8; // Integer
			constexpr auto m_skinMod = 0xeac; // Integer
			constexpr auto m_nBody = 0xeb0; // Integer
			constexpr auto m_camoIndex = 0xeb4; // Integer
			constexpr auto m_ammoInClip = 0x1694; // Integer
			constexpr auto m_customScriptInt = 0x1698; // Integer
			constexpr auto m_survivalProperty = 0x169c; // Integer
			constexpr auto m_weaponNameIndex = 0x16a4; // Integer
			constexpr auto m_modBitField = 0x16a8; // Integer
			constexpr auto m_survivalPropFadeDist = 0x16b0; // Float
		}

		// Inheritance: 
		namespace CDeathBoxProp
		{
			constexpr auto m_highlightFunctionBits = 0x02c0;

			constexpr auto m_parentAttachmentType = 0x20; // Integer
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_fEffects = 0x44; // Integer
			constexpr auto m_usableType = 0x48; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_iTeamNum = 0x448; // Integer
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_vecMins = 0x4d0; // Vector
			constexpr auto m_vecMaxs = 0x4dc; // Vector
			constexpr auto m_usSolidFlags = 0x4e8; // Integer
			constexpr auto m_nSolidType = 0x4ec; // Integer
			constexpr auto m_triggerBloat = 0x4ed; // Integer
			constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
			constexpr auto m_nSurroundType = 0x4fc; // Integer
			constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
			constexpr auto m_CollisionGroup = 0x540; // Integer
			constexpr auto m_iSignifierName = 0x580; // String
			constexpr auto m_iName = 0x589; // String
			constexpr auto m_holdUsePrompt = 0x718; // String
			constexpr auto m_pressUsePrompt = 0x720; // String
			constexpr auto m_lifeState = 0x798; // Integer
			constexpr auto m_scriptNetData = 0x79c; // Integer
			constexpr auto m_phaseShiftFlags = 0x7b8; // Integer
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_fadeDist = 0x86c; // Float
			constexpr auto m_usablePriority = 0x928; // Integer
			constexpr auto m_usableDistanceOverride = 0x92c; // Float
			constexpr auto m_usableFOV = 0x930; // Float
			constexpr auto m_usePromptSize = 0x934; // Float
			constexpr auto m_firstChildEntityLink = 0xa40; // Integer
			constexpr auto m_firstParentEntityLink = 0xa44; // Integer
			constexpr auto m_realmsBitMask = 0xa48; // Integer64
			constexpr auto m_bUseHitboxesForRenderBox = 0x1691; // Integer
			constexpr auto m_bAnimateInStaticShadow = 0x1692; // Integer
			constexpr auto m_wantsScopeHighlight = 0x1693; // Integer
			constexpr auto m_customOwnerName = 0x16d0; // String
		}

		// Inheritance: 
		namespace CTeam
		{
			constexpr auto m_score = 0xa60; // Integer
			constexpr auto m_score2 = 0xa64; // Integer
			constexpr auto m_kills = 0xa68; // Integer
			constexpr auto m_deaths = 0xa6c; // Integer
			constexpr auto m_iRoundsWon = 0xa70; // Integer
			constexpr auto m_iTeamTeamNum = 0xa74; // Integer
			constexpr auto m_teamColor = 0xa78; // Vector
			constexpr auto m_szTeamname = 0xaa8; // String
		}

		// Inheritance: 
		namespace CBaseViewModel
		{
			constexpr auto m_animStartCycle = 0xc; // Float
			constexpr auto m_animPlaybackRate = 0x10; // Float
			constexpr auto m_animFrozen = 0x14; // Integer
			constexpr auto m_animModelIndex = 0x18; // Integer
			constexpr auto m_animSequence = 0x1c; // Integer
			constexpr auto m_nNewSequenceParity = 0x20; // Integer
			constexpr auto m_fEffects = 0x44; // Integer
			constexpr auto m_clrRender = 0x50; // Integer
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_nRenderMode = 0x4b9; // Integer
			constexpr auto m_nBody = 0xeb0; // Integer
			constexpr auto m_nResetEventsParity = 0xebc; // Integer
			constexpr auto m_bSequenceFinished = 0xf54; // Integer
			constexpr auto m_flModelScale = 0xf60; // Float
			constexpr auto m_viewModelOwner = 0x1a5c; // Integer
			constexpr auto m_projectileIsVisible = 0x1a60; // Integer
			constexpr auto m_bBlockEventLayer = 0x1e40; // Integer
			constexpr auto m_isAdsTransition = 0x1e41; // Integer
			constexpr auto m_hWeapon = 0x1e44; // Integer
		}
	}
};